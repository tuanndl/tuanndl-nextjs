{"ast":null,"code":"import _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\n\nvar FontFaceObserver = require('fontfaceobserver');\n\nvar arrFont = [{\n  link: 'https://fonts.googleapis.com/css?family=Space+Mono&display=swap',\n  name: 'Space Mono'\n}, {\n  link: 'https://fonts.googleapis.com/css?family=Roboto:300,400,500,700,900',\n  name: 'Roboto'\n}, {\n  link: 'https://fonts.googleapis.com/css?family=IBM+Plex+Serif&display=swap',\n  name: 'Space Mono'\n},,];\n\nvar Fonts = function Fonts() {\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = _getIterator(arrFont), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var item = _step.value;\n      var link = document.createElement('link');\n      link.href = 'https://fonts.googleapis.com/css?family=Roboto:300,400,500,700,900';\n      link.rel = 'stylesheet';\n      document.head.appendChild(link);\n      var roboto = new FontFaceObserver('Roboto');\n      roboto.load();\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n};\n\nexport default Fonts;","map":{"version":3,"sources":["/Users/macbook/Git/tuanndl-nextjs/fonts/index.js"],"names":["FontFaceObserver","require","arrFont","link","name","Fonts","item","document","createElement","href","rel","head","appendChild","roboto","load"],"mappings":";;AAAA,IAAMA,gBAAgB,GAAGC,OAAO,CAAC,kBAAD,CAAhC;;AAEA,IAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,IAAI,EAAE,iEADR;AAEEC,EAAAA,IAAI,EAAE;AAFR,CADc,EAKd;AACED,EAAAA,IAAI,EAAE,oEADR;AAEEC,EAAAA,IAAI,EAAE;AAFR,CALc,EASd;AACED,EAAAA,IAAI,EAAE,qEADR;AAEEC,EAAAA,IAAI,EAAE;AAFR,CATc,GAAhB;;AAiBA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;AAAA;AAAA;;AAAA;AAClB,sCAAmBH,OAAnB,4GAA4B;AAAA,UAAjBI,IAAiB;AAC1B,UAAMH,IAAI,GAAGI,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAb;AACAL,MAAAA,IAAI,CAACM,IAAL,GAAY,oEAAZ;AACAN,MAAAA,IAAI,CAACO,GAAL,GAAW,YAAX;AAEAH,MAAAA,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0BT,IAA1B;AAEA,UAAMU,MAAM,GAAG,IAAIb,gBAAJ,CAAqB,QAArB,CAAf;AAEAa,MAAAA,MAAM,CAACC,IAAP;AACD;AAXiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYnB,CAZD;;AAcA,eAAeT,KAAf","sourcesContent":["const FontFaceObserver = require('fontfaceobserver')\n\nconst arrFont = [\n  {\n    link: 'https://fonts.googleapis.com/css?family=Space+Mono&display=swap',\n    name: 'Space Mono'\n  },\n  {\n    link: 'https://fonts.googleapis.com/css?family=Roboto:300,400,500,700,900',\n    name: 'Roboto'\n  },\n  {\n    link: 'https://fonts.googleapis.com/css?family=IBM+Plex+Serif&display=swap',\n    name: 'Space Mono'\n  },\n\n  ,\n\n];\nconst Fonts = () => {\n  for (const item of arrFont) {\n    const link = document.createElement('link');\n    link.href = 'https://fonts.googleapis.com/css?family=Roboto:300,400,500,700,900';\n    link.rel = 'stylesheet';\n\n    document.head.appendChild(link);\n\n    const roboto = new FontFaceObserver('Roboto');\n\n    roboto.load()\n  }\n}\n\nexport default Fonts;"]},"metadata":{},"sourceType":"module"}