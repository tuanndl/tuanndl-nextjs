{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Git/tuanndl-nextjs/components/Article/Content.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport CodeBlock from './CodeBlock';\n\nconst htmlParser = require('react-markdown/plugins/html-parser');\n\nconst Content = props => {\n  const parseHtml = htmlParser({\n    isValidNode: node => node.type !== 'script',\n    processingInstructions: [\n      /* ... */\n    ]\n  });\n  return __jsx(ReactMarkdown, {\n    source: props.content,\n    escapeHtml: false,\n    astPlugins: [parseHtml],\n    renderers: {\n      code: CodeBlock\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  });\n};\n\nexport default Content;","map":{"version":3,"sources":["/Users/macbook/Git/tuanndl-nextjs/components/Article/Content.js"],"names":["React","ReactMarkdown","CodeBlock","htmlParser","require","Content","props","parseHtml","isValidNode","node","type","processingInstructions","content","code"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AACA,MAAMC,UAAU,GAAGC,OAAO,CAAC,oCAAD,CAA1B;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AAEvB,QAAMC,SAAS,GAAGJ,UAAU,CAAC;AAC3BK,IAAAA,WAAW,EAAEC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAc,QADR;AAE3BC,IAAAA,sBAAsB,EAAE;AAAC;AAAD;AAFG,GAAD,CAA5B;AAKA,SACE,MAAC,aAAD;AACE,IAAA,MAAM,EAAEL,KAAK,CAACM,OADhB;AAEE,IAAA,UAAU,EAAE,KAFd;AAGE,IAAA,UAAU,EAAE,CAACL,SAAD,CAHd;AAIE,IAAA,SAAS,EAAE;AAAEM,MAAAA,IAAI,EAAEX;AAAR,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,CAfD;;AAiBA,eAAeG,OAAf","sourcesContent":["import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport CodeBlock from './CodeBlock';\nconst htmlParser = require('react-markdown/plugins/html-parser');\n\nconst Content = props => {\n\n  const parseHtml = htmlParser({\n    isValidNode: node => node.type !== 'script',\n    processingInstructions: [/* ... */]\n  });\n\n  return (\n    <ReactMarkdown\n      source={props.content}\n      escapeHtml={false}\n      astPlugins={[parseHtml]}\n      renderers={{ code: CodeBlock }}\n    />\n  );\n};\n\nexport default Content;\n\n"]},"metadata":{},"sourceType":"module"}