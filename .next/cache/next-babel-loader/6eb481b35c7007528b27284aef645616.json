{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nvar _jsxFileName = \"/Users/macbook/Git/tuanndl-nextjs/pages/post/[id].js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../../components/layout';\nimport Content from '../../components/Article/Content';\nimport _get from 'lodash/get';\n\nconst Post = ({\n  dataPost: {\n    title,\n    content,\n    createdAt,\n    _id,\n    category\n  },\n  dataComment\n}) => {\n  console.log(dataComment);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"container__main--title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"# \", title)), __jsx(Content, {\n    content: content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }));\n};\n\nPost.getInitialProps = async function (ctx) {\n  const callApi = [fetch('https://gateway.tuanndl.com/api/v1/article/' + ctx.query.id), fetch('https://gateway.tuanndl.com/api/v1/comment/' + ctx.query.id)];\n  let responses = await _Promise.all(callApi);\n  const dataPost = await responses[0].json();\n  const dataComment = await responses[1].json();\n  return {\n    dataPost: _get(dataPost, 'result', ''),\n    dataComment: _get(dataComment, 'result,data', [])\n  };\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/macbook/Git/tuanndl-nextjs/pages/post/[id].js"],"names":["React","fetch","Layout","Content","_get","Post","dataPost","title","content","createdAt","_id","category","dataComment","console","log","getInitialProps","ctx","callApi","query","id","responses","all","json"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA,SAAlB;AAA6BC,IAAAA,GAA7B;AAAkCC,IAAAA;AAAlC,GAAZ;AAAyDC,EAAAA;AAAzD,CAAD,KAA4E;AACvFC,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKL,KADL,CADF,CADF,EAME,MAAC,OAAD;AAAS,IAAA,OAAO,EAAEC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD,CAZD;;AAcAH,IAAI,CAACU,eAAL,GAAuB,gBAAeC,GAAf,EAAoB;AACzC,QAAMC,OAAO,GAAG,CACdhB,KAAK,CAAC,gDAAgDe,GAAG,CAACE,KAAJ,CAAUC,EAA3D,CADS,EAEdlB,KAAK,CAAC,gDAAgDe,GAAG,CAACE,KAAJ,CAAUC,EAA3D,CAFS,CAAhB;AAKA,MAAIC,SAAS,GAAG,MAAM,SAAQC,GAAR,CAAYJ,OAAZ,CAAtB;AACA,QAAMX,QAAQ,GAAG,MAAMc,SAAS,CAAC,CAAD,CAAT,CAAaE,IAAb,EAAvB;AACA,QAAMV,WAAW,GAAG,MAAMQ,SAAS,CAAC,CAAD,CAAT,CAAaE,IAAb,EAA1B;AAEA,SAAO;AACLhB,IAAAA,QAAQ,EAAEF,IAAI,CAACE,QAAD,EAAW,QAAX,EAAoB,EAApB,CADT;AAELM,IAAAA,WAAW,EAAER,IAAI,CAACQ,WAAD,EAAc,aAAd,EAA4B,EAA5B;AAFZ,GAAP;AAID,CAdD;;AAgBA,eAAeP,IAAf","sourcesContent":["import React from 'react'\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../../components/layout';\nimport Content from '../../components/Article/Content';\nimport _get from 'lodash/get';\n\nconst Post = ({ dataPost: { title, content, createdAt, _id, category}, dataComment }) => {\n  console.log(dataComment);\n  return(\n    <Layout>\n      <h1 className='container__main--title'>\n        <span>\n          # {title}\n        </span>\n      </h1>\n      <Content content={content} />\n    </Layout>\n  );\n};\n\nPost.getInitialProps = async function(ctx) {\n  const callApi = [\n    fetch('https://gateway.tuanndl.com/api/v1/article/' + ctx.query.id),\n    fetch('https://gateway.tuanndl.com/api/v1/comment/' + ctx.query.id)\n  ];\n\n  let responses = await Promise.all(callApi);\n  const dataPost = await responses[0].json();\n  const dataComment = await responses[1].json();\n\n  return {\n    dataPost: _get(dataPost, 'result',''),\n    dataComment: _get(dataComment, 'result,data',[]),\n  }\n};\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}