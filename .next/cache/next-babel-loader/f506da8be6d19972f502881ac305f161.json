{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nvar _jsxFileName = \"/Users/macbook/Git/tuanndl-nextjs/pages/post/[id].js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../../components/layout';\nimport Content from '../../components/Article/Content';\nimport _get from 'lodash/get';\n\nvar Post = function Post(_ref) {\n  var dataPost = _ref.dataPost,\n      dataComment = _ref.dataComment;\n  console.log(dataPost, dataComment);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(Content, {\n    content: dataPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }));\n};\n\nPost.getInitialProps = function _callee(ctx) {\n  var callApi, responses, dataPost, dataComment;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          callApi = [fetch('https://gateway.tuanndl.com/api/v1/article/' + ctx.query.id), fetch('https://gateway.tuanndl.com/api/v1/comment/' + ctx.query.id)];\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(_Promise.all(callApi));\n\n        case 3:\n          responses = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(responses[0].json());\n\n        case 6:\n          dataPost = _context.sent;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(responses[1].json());\n\n        case 9:\n          dataComment = _context.sent;\n          return _context.abrupt(\"return\", {\n            dataPost: _get(dataPost, 'result', ''),\n            dataComment: _get(dataComment, 'result,data', [])\n          });\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/macbook/Git/tuanndl-nextjs/pages/post/[id].js"],"names":["React","fetch","Layout","Content","_get","Post","dataPost","dataComment","console","log","getInitialProps","ctx","callApi","query","id","all","responses","json"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAA+B;AAAA,MAA5BC,QAA4B,QAA5BA,QAA4B;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAqBC,WAArB;AACA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAS,IAAA,OAAO,EAAED,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAPD;;AASAD,IAAI,CAACK,eAAL,GAAuB,iBAAeC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACfC,UAAAA,OADe,GACL,CACdX,KAAK,CAAC,gDAAgDU,GAAG,CAACE,KAAJ,CAAUC,EAA3D,CADS,EAEdb,KAAK,CAAC,gDAAgDU,GAAG,CAACE,KAAJ,CAAUC,EAA3D,CAFS,CADK;AAAA;AAAA,2CAMC,SAAQC,GAAR,CAAYH,OAAZ,CAND;;AAAA;AAMjBI,UAAAA,SANiB;AAAA;AAAA,2CAOEA,SAAS,CAAC,CAAD,CAAT,CAAaC,IAAb,EAPF;;AAAA;AAOfX,UAAAA,QAPe;AAAA;AAAA,2CAQKU,SAAS,CAAC,CAAD,CAAT,CAAaC,IAAb,EARL;;AAAA;AAQfV,UAAAA,WARe;AAAA,2CAUd;AACLD,YAAAA,QAAQ,EAAEF,IAAI,CAACE,QAAD,EAAW,QAAX,EAAoB,EAApB,CADT;AAELC,YAAAA,WAAW,EAAEH,IAAI,CAACG,WAAD,EAAc,aAAd,EAA4B,EAA5B;AAFZ,WAVc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAgBA,eAAeF,IAAf","sourcesContent":["import React from 'react'\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../../components/layout';\nimport Content from '../../components/Article/Content';\nimport _get from 'lodash/get';\n\nconst Post = ({ dataPost, dataComment }) => {\n  console.log(dataPost,dataComment);\n  return(\n    <Layout>\n      <Content content={dataPost} />\n    </Layout>\n  );\n};\n\nPost.getInitialProps = async function(ctx) {\n  const callApi = [\n    fetch('https://gateway.tuanndl.com/api/v1/article/' + ctx.query.id),\n    fetch('https://gateway.tuanndl.com/api/v1/comment/' + ctx.query.id)\n  ];\n\n  let responses = await Promise.all(callApi);\n  const dataPost = await responses[0].json();\n  const dataComment = await responses[1].json();\n\n  return {\n    dataPost: _get(dataPost, 'result',''),\n    dataComment: _get(dataComment, 'result,data',[]),\n  }\n};\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}